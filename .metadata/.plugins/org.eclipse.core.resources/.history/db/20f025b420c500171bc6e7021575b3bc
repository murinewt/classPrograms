package library;

import java.awt.*;
import java.awt.event.*;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import javax.swing.*;
import java.util.Date;
import java.util.*;

public class BorrowBook extends JFrame{


/**
 *
 * @author murinewt
 */

	private static final long serialVersionUID = 1L;
    static String BookNameStr="";
    JTextField BookName = new JTextField(10);
    JTextField StudentName = new JTextField(10);
    public JButton submit = new JButton("Next Student"); 
    JButton display = new JButton("Display");
    JButton Total = new JButton("Total");
    JTextArea output = new JTextArea(20,30);
    JTextArea outputBook = new JTextArea(20,40);
    JTextArea outputStudent = new JTextArea(14,40);
    JTextField change = new JTextField(10);
    JLabel label = new JLabel();
    JButton delete = new JButton("Delete Record");
    JScrollPane scroll = new JScrollPane(outputBook);
    JScrollPane scroll1 = new JScrollPane(output);
    JScrollPane scroll2 = new JScrollPane(outputStudent);
    
    String line = null;
    
    public static void main(String [] args) throws IOException{
    	//Date date1 = new Date();// "Sat Oct 28 23:38:21 EAT 2017";
    	readData("qwerty");
    	new BorrowBook();
    	//Date date2 = new Date();
    	//long diffInMillies = date2.getTime() - date1.getTime();
    	//System.out.println(""+diffInMillies);
                    
    }

    public BorrowBook() throws IOException{
        getContentPane().setBackground(Color.PINK);
        setLayout(new FlowLayout());
        setResizable(true);
        setLocation(200,50);
        setSize(1050, 650);
        setTitle("Library: Borrow Books");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        add(new Label("Book Name"));
        add(BookName);
        add(new Label("Name of Student"));
        add(StudentName);
        add(display);
        display.addActionListener(new ActionListener()
            {
        		
                @Override
                public void actionPerformed(ActionEvent e) {
                	Date date= new Date();
                    String StudentNameString="";
                    try{
                    	BookNameStr = BookName.getText();
                       
                        StudentNameString = StudentName.getText();
                        
                        output.append("      "+StudentNameString+"\t"+BookNameStr+"\t"+date+"\n");
                        BookName.setText("");
                        StudentName.setText("");
                        String lent;
                        lent = StudentNameString+"\t"+BookNameStr+"\t"+date;
                        BufferedWriter bw=null;
                        try{
                            bw = new BufferedWriter(new FileWriter("E://file//studentLentBooks.txt",true));
                           
                         bw.write(lent);
                            bw.newLine();
                            bw.flush();
                        }catch(IOException ioe){
                            ioe.printStackTrace();
                        }
                        getContentPane().repaint();
                        
                    }
                    catch(Exception ex){
                        System.out.println(ex);
                    }
                    
                }
            });
        add(Total);
        Total.addActionListener(new ActionListener()
            {
                @Override
                public void actionPerformed(ActionEvent e) {
                	try {
						readStudents();
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
                }
            });
        add(delete);
        delete.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent e){
                output.setText("");
                try {
					output();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
                
            }
        });
        //add(outputBook);
        ouputFood();
        output();
        //scroll.add(outputBook);
        add(scroll);
        output.setEditable(false);
        add(submit);
        submit.addActionListener(new ActionListener()
            {
                @Override
                public void actionPerformed(ActionEvent e) {
                    //new Customer
                    label.setText("");
                    BookName.setText("");
                    StudentName.setText("");
                    change.setText("0");
                    outputBook.setText("");
                    outputStudent.setText("");
                    outputStudent.append("Student Name\tBook Borrowed\t\tDate\n\n");
                    try {
						ouputFood();
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
                    output.setText("");
                    
                    try {
						output();
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
                    add(label);
                }
            }
        );    
        add(scroll1);

    	outputStudent.append("Student Name\tBook Borrowed\t\tDate\n\n");
        add(scroll2);
        output.setEditable(false);
        
        setVisible(true);
    }
    public static void readData(String replaceWith){
    	File books = new File("E://file//studentLentBooks.txt");
    	//String sxd=readLine(books);
    	//System.out.println(sxd);
    	try{
    		BufferedReader book = new BufferedReader(new FileReader("E://file//studentLentBooks.txt"));
    		String line;
    		StringBuffer inputBuffer = new StringBuffer();
    		
    		while((line = book.readLine())!=null){
    			inputBuffer.append(line);
    			inputBuffer.append('\n');
    		}
    		String inputStr= inputBuffer.toString();
    		
    		book.close();
    		inputStr= inputStr.replace(replaceWith, "Qwerty");
    		
    		FileOutputStream fileOut = new FileOutputStream("E://file//studentLentBooks.txt");
    		fileOut.write(inputStr.getBytes());
    		fileOut.close();
    	}catch(Exception e){
    		System.out.println(e);
    	}
    }
    
    public void readStudents()throws IOException{
        String lines ="";
    	File books = new File("E://file//studentLentBooks.txt");

    	outputStudent.setText("");
    	outputStudent.append("Student Name\tBook Borrowed\t\tDate\n\n");
        try {
            // FileReader reads text files in the default encoding.
            FileReader fileReader = 
                new FileReader(books);

            // Always wrap FileReader in BufferedReader.
            BufferedReader bufferedReader = 
                new BufferedReader(fileReader);

            while((lines = bufferedReader.readLine()) != null) {
                //line = " "+"";
                outputStudent.append(lines+"\n");
                //System.out.println(line);
            }   

            // Always close files.
            bufferedReader.close();         
        }
        catch(FileNotFoundException ex) {
            System.out.println(
                "Unable to open file '" + 
                books + "'");                
        }
    }
    
    public void output() throws IOException{
        Date date= new Date();
        output.append("\t"+date+"\n");
        output.append("\t"+"You Ordered: \n\n");
        output.append("      "+"Name\t\tBook\t\n"); 
        
    }
    public void ouputFood() throws IOException{
        output.setText("");
        outputBook.append("Books  Offered  At The Library\nName Of The Book\n");
        File books = new File("E://file//books.txt");
        try {
            // FileReader reads text files in the default encoding.
            FileReader fileReader = 
                new FileReader(books);

            // Always wrap FileReader in BufferedReader.
            BufferedReader bufferedReader = 
                new BufferedReader(fileReader);

            while((line = bufferedReader.readLine()) != null) {
            	outputBook.append(line+"\n");
            }   

            // Always close files.
            bufferedReader.close();         
        }
        catch(FileNotFoundException ex) {
            System.out.println(
                "Unable to open file '" + 
                books + "'");                
        }
        
    }
}