package tetrisNewton;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;



public class Board extends JPanel implements ActionListener,KeyListener {
	
	
	
	
	
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private static Shape chora;// = new Shapes();
	int speed = 30;
	
	/*public Board(){
		setBackground(Color.white);
		setLayout(new BorderLayout());
	
	}*/
	
	
	public static void main(String[] args) {
		JFrame window = new JFrame("Tetris Game");
        Board content = new Board();
        content.setBackground(Color.white);
        window.setContentPane(content);
        window.setSize(800  , 500); 
        window.setResizable(false); 
       // Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        /*window.setLocation( (screenSize.width - window.getWidth())/2,
                (screenSize.height - window.getHeight())/2 );*/
        window.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );
        Timer frameTime = new Timer(2000,content);
		window.setVisible(true);
		frameTime.start();
        //window.setVisible(true);
	}
	
	

	@Override
	public void keyPressed(KeyEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void keyReleased(KeyEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void keyTyped(KeyEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	private int frameNum = 0;
	@Override
	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub
		
		frameNum++;
		repaint();
	}
	
	public void drawFrame(Graphics g,int frameNumber,int width, int height){
		//for (int z=0;z<19;z++){
		if (chora == null){
			chora  = new Shape(180,30);
		}

		chora.yPoint = chora.yPoint+30;
		chora.draw(g, 1);
		//for (int e=0;e<19;e++)
			
		
	}

	protected void paintComponent(Graphics g){
		//chora.draw(g);
		super.paintComponent(g);
		g.drawLine(50, 10, 50, 450);
		g.drawLine(350, 10, 350, 450);
		g.drawLine(50, 450, 350, 450);
		drawFrame(g,frameNum,getWidth(),getHeight());//,frameNum);//getWidth(),getHeight());
	}

}
